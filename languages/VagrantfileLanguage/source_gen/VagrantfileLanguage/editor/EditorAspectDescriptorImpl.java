package VagrantfileLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Collections;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = ((SAbstractConcept) concept);
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d951cdL, "VagrantfileLanguage.structure.BridgeDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new BridgeDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d9395fL, "VagrantfileLanguage.structure.InlineShellProvisioningDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new InlineShellProvisioningDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d951c2L, "VagrantfileLanguage.structure.IpDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new IpDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d8aa8cL, "VagrantfileLanguage.structure.KeyValueVirtualBoxCustomizationDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new KeyValueVirtualBoxCustomizationDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d89208L, "VagrantfileLanguage.structure.MachineDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new MachineDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d8929eL, "VagrantfileLanguage.structure.OptionBootTimeOutDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionBootTimeOutDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d89288L, "VagrantfileLanguage.structure.OptionBoxCheckUpdateDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionBoxCheckUpdateDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d89280L, "VagrantfileLanguage.structure.OptionBoxDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionBoxDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d89284L, "VagrantfileLanguage.structure.OptionBoxUrlDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionBoxUrlDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d8928cL, "VagrantfileLanguage.structure.OptionGuestDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionGuestDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d89233L, "VagrantfileLanguage.structure.OptionsDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new OptionsDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892bbL, "VagrantfileLanguage.structure.PrivateNetworkInterfaceDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new PrivateNetworkInterfaceDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, "VagrantfileLanguage.structure.PublicNetworkInterfaceDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new PublicNetworkInterfaceDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0xda82f5d88dbb231L, "VagrantfileLanguage.structure.SshDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new SshDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892a6L, "VagrantfileLanguage.structure.VirtualBoxProviderDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new VirtualBoxProviderDeclaration_Editor());
      }
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt), MetaAdapterFactory.getConcept(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892eeL, "VagrantfileLanguage.structure.VirtualBoxSharedFolderDeclaration"))) {
        return Collections.<ConceptEditor>singletonList(new VirtualBoxSharedFolderDeclaration_Editor());
      }
    }
    return Collections.<ConceptEditor>emptyList();
  }



}
