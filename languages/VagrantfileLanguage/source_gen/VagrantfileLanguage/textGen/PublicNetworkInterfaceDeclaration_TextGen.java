package VagrantfileLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNode;

public class PublicNetworkInterfaceDeclaration_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    if (SPropertyOperations.getBoolean(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d9fd20L, "use_dhcp_assigned_default_route")) == true || ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() > 0 || (SLinkOperations.getTarget(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951c8L, "Ip")) != null)) {
      tgs.append(",");
      tgs.newLine();
    }
    ctx.getBuffer().area().increaseIndent();
    if (SPropertyOperations.getBoolean(ctx.getPrimaryInput(), MetaAdapterFactory.getProperty(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d9fd20L, "use_dhcp_assigned_default_route"))) {
      tgs.indent();
      tgs.append("use_dhcp_assigned_default_route: true");
      tgs.append(((SLinkOperations.getTarget(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951c8L, "Ip")) != null) || ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() > 0 ? "," : ""));
      tgs.newLine();
    }

    if ((SLinkOperations.getTarget(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951c8L, "Ip")) != null)) {
      tgs.indent();
      tgs.append("ip: ");
      tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951c8L, "Ip")), MetaAdapterFactory.getProperty(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d951c2L, 0x5c5c548073d951c3L, "ip")));
      tgs.append((ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() > 0 ? "," : ""));
    }

    if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() > 0) {
      if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() == 1) {
        tgs.indent();
        tgs.append("bridge: \"");
        tgs.append(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).getElement(0), MetaAdapterFactory.getProperty(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d951cdL, 0x5c5c548073d951ceL, "interface_name")));
        tgs.append("\"");
        tgs.newLine();

      }
      if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).count() > 1) {
        tgs.indent();
        tgs.append("bridge: [");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), MetaAdapterFactory.getContainmentLink(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d892baL, 0x5c5c548073d951caL, "Bridges"))).visitAll(new IVisitor<SNode>() {
          public void visit(SNode bridge) {
            tgs.indent();
            tgs.append("\"");
            tgs.append(SPropertyOperations.getString(bridge, MetaAdapterFactory.getProperty(0x324207e1b3174582L, 0x8d4e0163a5a3cf3eL, 0x5c5c548073d951cdL, 0x5c5c548073d951ceL, "interface_name")));
            tgs.append("\",");
            tgs.newLine();
          }
        });
        ctx.getBuffer().area().decreaseIndent();
        tgs.indent();
        tgs.append("]");
        tgs.newLine();
        tgs.newLine();
      }

    }

    ctx.getBuffer().area().decreaseIndent();
  }
}
